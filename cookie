 /*
   cookie: 存储数据   当用户访问了某个网站（网页）的时候，我们就可以通过cookie来像访问者电脑上存储数据
    1 不同的浏览器存储的位置不同
	2 cookie的存储是以域名进行区分的
	3 cookie的数据是可以设置名字的
	4 一个域名下存放的cookie的个数是有限制的，不同浏览器存放的限制不一样
	5 每个cookie放的内容大小也是有限的，不同浏览器存放的内容大小不一样；
	
	我们通过document.cookie来获取当前网站下的cookie的时候，得到的是字符串形式的值，它包含了当前网站下所有的cookie，
	他会把所有的cookie通过一个分号+空格的形式串联起来
	
	如果想长时间存放一个cookie需要设置这个cookie的时候同时需设置一个过期时间；
	cookie默认是临时存储的，当浏览器关闭浏览器程序就清除掉

    内容最好编码存放  encodeURI （变成编码） decodeURI（编码变文字）
	
	var odate = new Date();
	
	odate.setDate(odate.getDate() + 5)
	odate.toGMTString()
	
	document.cookie = '名称=值；expires'+ 字符串格式时间；
 */
    var odate = new Date();
	
	odate.setDate(odate.getDate() + 5)
	odate.toGMTString();
	
	document.cookie = 'usename=leo;expires='+odate;
	document.cookie = 'age=32';
	
	function setcookie(key,value,t){  //设置 cookie
	  var odate = new Date();
	  odate.setDate(odate.getDate() + t);
	  document.cookie = key+'='+value+';expires='+odate.toGMTString();
	}
	
   function getcookie(key){ //获取cookie
     var arr1 = document.cookie.split('; ');
	 for(var i=0;i<arr1.length;i++){
	   var arr2 = arr1[i].split('=');
	   if(arr2[0] == key){
	     return decodeURI(arr2[1]);
	   }
	 }
   }
   
   function removecookie(key){//删除cookie
     setcookie(key,'',-1);
   }
   
   /*
 cookie
   数据存储到计算机中，通过浏览器控制添加与删除数据
 cookie的特点
   存储限制
     -域名100个cookie，每组值大小4kb
	客户端‘服区器端，都会请求服务器（头信息）
	页面间的cookie是共享
	
  storage 
     sessionStorage
	   session临时回话，从页面打开到页面关闭的时间段
	   窗口的临时存储，页面关闭，本地存储消失
	 localStorage
	   永久存储（可以手动删除数据）
    storage特点
	  存储量的限制（5M）
	  客户端完成，不会请求服务器处理
	  sessionStorage数据不共享’localStorage共享
	  
	Storage API
	  setItem();
	    设置数据，key/value类型，类型都是字符串
		可以用获取属性的形式操作
	  getItem();
	    获取数据，通过key来获取到相应的value
	  removeItem();
	    删除数据，通过key来删除相应的vlalue
	  clear();
	    删除全部存储的值
	
	
	storage API
	  存储事件
	    当数据有修改或删除的情况下，就会触发storage事件
		在对数据进行改变的窗口对象上是不会触发的
		key：修改或删除的key的值，如果调用clea();key为null
		newValue：新设置的值，如果调用removeStorage(),key为null
		oldValue：调用改变前的value的值
		storageArea:当前的storage对象
		url：触发该脚本变化的文档的url */
    
  var local = {
  save (key, value) {
    localStorage.setItem(key, JSON.stringify(value))  //设置cookie
  },
  fetch (key) {
    return JSON.parse(localStorage.getItem(key)) || {} //获取cookie
  }
}
