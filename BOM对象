/*
   BOM  Browser Object Model  浏览器对象模型
 */
var alnp = document.getElementsByTagName('input');
var opener = null;

/* window.
  DOM Window (重点)---它是整个js的顶层对象. window代表一个浏览器窗口或者一个框架 frameset iframe
  open(页面的地址url，打开的方式)方法 打开一个新的窗口
  _self 本地打开窗口
  如果url为空，则默认打开一个空白页面
  如果第二个参数为空，默认新窗口打开
   返回值：返回新打开的窗口的window对象

  parent 父窗口
  top 顶层窗口
  opener 找开的窗口
  frames[]
*/

alnp[0].onclick = function(){
    //window.open('http://www.baidu.com','_self');
    opener = window.open();

    opener.document.body.style.background = 'red';
}

/*
 close() 方法  关闭窗口
*/
alnp[1].onclick = function(){
    window.close();
    /*
      ff 无妨关闭
      chrome 直接关闭
      ie  提示关闭
    */
}

alnp[2].onclick = function(){
    opener.close();

    /*
     可以关闭在本地窗口中打开的新窗口
    */
}

/*
  DOM Navigator -----浏览器信息
  window.navigator.userAgent  浏览器信息

*/
var userAgent = window.navigator.userAgent;
if(userAgent.indexOf('MSIE') !=-1&&userAgent.indexOf("compatible") > -1 ){
    alert('我是IE')  // 判断是不是IE
}else{
    alert('我不是Ie')
}
if (userAgent.indexOf('Opera')>-1) {
    return "Opera"
}; //判断是否Opera浏览器
if (userAgent.indexOf("Firefox") > -1) {
    return "FF";
} //判断是否Firefox浏览器
if (userAgent.indexOf("Chrome") > -1){
    return "Chrome";
}
if (userAgent.indexOf("Safari") > -1) {
    return "Safari";
} //判断是否Safari浏览器



/*
 window.loaction  浏览地址信息
*/

//alert(window.loaction);

//window.location (重点) ---关于url信息 href 它可以完成超链接任务.

//window.loaction.href:  url


//window.loaction.search  : url?后面的内容

//window.loaction.hash  :  url#后面的内容

//DOM History (次重点)---它是记录的浏览记录 go()

//window.Screen ---------关于屏幕像素点操作

/*
 可视区的尺寸
 document.documentElement.clientWidth
 document.documentElement.clientHeight

 滚动距离
 document.documentElement.scrollTop[left]

 内容高度
 document.body.scrollHeight

 文档高度
 document.documentElement.offsetHeight
 docuemnt.body.offsetHeight ie下兼容

 onscroll;当滚动条滚动的时候除法
 onresize;当窗口大小发生改变的时候触发 */

// 定时器
  setTimeout(函数, 频率（毫秒）)  //一次性定时器 只执行一次
  setInterval(函数， 频率（毫秒）) // 周期性定时器，按照设置的时间周期性触发
  clearTimeout  clearInterval()   //清除定时器

  注意： 当定时器停止时，一定要把定时器清除掉。
  
 Bom可以对浏览器的窗口进行访问和操作.使用Bom,开发者可以移动窗口,改变状态栏中的文本以及执行其他与页面内容不直接相关的动作.

window对象:

1.窗口操作

其中moveTo,moveBy是窗口的移动,resizeTo,resizeBo是设置窗口的大小,scrollTo,scrollBy是设置滚动条每次滚动的位置.

打开和关闭新窗口:

openBtn.onclick = function() {
    newWindow = window.open("./test.html", "_blank", "width=300px, height=300px, left=500px, top=300px, toolbar=no")
};

closeBtn.onclick = function() {
    newWindow.window.close();
};

时间间隔和暂停:

时间间隔:
setInterval
暂停:
 window.clearInterval
示例:
start.onclick = function() {
    // 3. 设置定时器
    times = setInterval(function() {
       window.scrollBy(0, 5);
    }, 40);
};
stop.onclick = function() {
    //4. 清除定时器
    window.clearInterval(times);
};

setTimeOut:只在时间间隔后执行一次操作


下面附上一个倒计时的例子:


 

历史记录:

history.go()

括号中的参数可以是1,-1

history.go(1)表示前进一页.相当于history.forward()

history.go(-1)表示后退一页,相当于history.back()


location:

location对象表示载入窗口的URL,此外,他还可以解析URL

1.hash:返回URL中#之后的部分

2.host:返回服务器的名字

3.href:当前载入页面完整的URL

4.search:执行GET请求的URL中的问号后面的部分

 

location对象有一个reload方法:可重新载入当前页面(刷新).

reload为false,从缓存中载入,reload为true,从服务器端载入,省略参数,默认为false

 

screen对象:

window.screen.availWidth+" "+window.screen.availheight    (窗口可以事情的屏幕的宽度和高度)

window.screen.Width+" "+window.screen.height  (屏幕的宽度和高度)

确定新窗口的大小时,availHeight和availWidth属性非常有用
